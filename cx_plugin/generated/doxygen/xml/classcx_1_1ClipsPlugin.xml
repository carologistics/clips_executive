<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcx_1_1ClipsPlugin" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>cx::ClipsPlugin</compoundname>
    <includes refid="clips__plugin_8hpp" local="no">clips_plugin.hpp</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classcx_1_1ClipsPlugin_1a5053a0c74ce074ddc7123554f9e45752" prot="private" static="no">
        <type>pluginlib::UniquePtr&lt; <ref refid="classcx_1_1ClipsPlugin" kindref="compound">cx::ClipsPlugin</ref> &gt;</type>
        <definition>using cx::ClipsPlugin::Ptr =  pluginlib::UniquePtr&lt;cx::ClipsPlugin&gt;</definition>
        <argsstring></argsstring>
        <name>Ptr</name>
        <qualifiedname>cx::ClipsPlugin::Ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="36" column="3" bodyfile="include/cx_plugin/clips_plugin.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classcx_1_1ClipsPlugin_1a68cdb6f3c003491e6b12d502e4aca142" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ClipsPluginManager</definition>
        <argsstring></argsstring>
        <name>ClipsPluginManager</name>
        <qualifiedname>cx::ClipsPlugin::ClipsPluginManager</qualifiedname>
        <param>
          <type><ref refid="classcx_1_1ClipsPluginManager" kindref="compound" external="/home/runner/work/clips-executive/clips-executive/cross_reference/cx_clips_env_manager/cx_clips_env_manager.tag">ClipsPluginManager</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="35" column="16" bodyfile="include/cx_plugin/clips_plugin.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcx_1_1ClipsPlugin_1aace7c9a1941b76a19a23e6881ec26906" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string cx::ClipsPlugin::plugin_name_</definition>
        <argsstring></argsstring>
        <name>plugin_name_</name>
        <qualifiedname>cx::ClipsPlugin::plugin_name_</qualifiedname>
        <briefdescription>
<para>Configured name of the plugin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="76" column="15" bodyfile="include/cx_plugin/clips_plugin.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcx_1_1ClipsPlugin_1a5c9c64f5ab925a688f022554d3985342" prot="protected" static="no" mutable="no">
        <type>rclcpp_lifecycle::LifecycleNode::WeakPtr</type>
        <definition>rclcpp_lifecycle::LifecycleNode::WeakPtr cx::ClipsPlugin::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <qualifiedname>cx::ClipsPlugin::parent_</qualifiedname>
        <briefdescription>
<para>Reference to parent node in case ROS interaction is needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="79" column="44" bodyfile="include/cx_plugin/clips_plugin.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1ad659901e789d9344a41a0d64bb7e2c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cx::ClipsPlugin::ClipsPlugin</definition>
        <argsstring>()</argsstring>
        <name>ClipsPlugin</name>
        <qualifiedname>cx::ClipsPlugin::ClipsPlugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="39" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1a5307ca4a8e112257ee6c1902822d7ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual cx::ClipsPlugin::~ClipsPlugin</definition>
        <argsstring>()</argsstring>
        <name>~ClipsPlugin</name>
        <qualifiedname>cx::ClipsPlugin::~ClipsPlugin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="40" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1a6bdb6ad84acf811daf6facf8a5497e2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void cx::ClipsPlugin::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>cx::ClipsPlugin::initialize</qualifiedname>
        <briefdescription>
<para>Called once for each plugin when it is loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="43" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1a3aa0e046356cc938b853e414c539cb60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void cx::ClipsPlugin::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <qualifiedname>cx::ClipsPlugin::finalize</qualifiedname>
        <briefdescription>
<para>Called once for each plugin when it is unloaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="45" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1ae0bf2f3822f20d250a1763bb2f7b1b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool cx::ClipsPlugin::clips_env_init</definition>
        <argsstring>(std::shared_ptr&lt; clips::Environment &gt; &amp;env)=0</argsstring>
        <name>clips_env_init</name>
        <qualifiedname>cx::ClipsPlugin::clips_env_init</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; clips::Environment &gt; &amp;</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Called after initialize once for every managed Clips environment. </para>
        </briefdescription>
        <detaileddescription>
<para>Register your user-defined functions here and store the references of the environment for usage. The clips environment should not be locked in this function as the plugin manager takes care of that. Only lock the Clips environment when accessing it from separate threads, such as callbacks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a Clips environment including a mutex to lock before usage in other threads.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true iff the initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1a503dc794d932be7047a2d9c3901c61df" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool cx::ClipsPlugin::clips_env_destroyed</definition>
        <argsstring>(std::shared_ptr&lt; clips::Environment &gt; &amp;env)=0</argsstring>
        <name>clips_env_destroyed</name>
        <qualifiedname>cx::ClipsPlugin::clips_env_destroyed</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; clips::Environment &gt; &amp;</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called once for every managed Clips environment on shutting down the environment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a Clips environment including a mutex to lock before usage in other threads. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true iff the initialization succeeded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="70" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1acb1a9459c0b47aeac9ed24861732baad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string cx::ClipsPlugin::get_plugin_name</definition>
        <argsstring>() const</argsstring>
        <name>get_plugin_name</name>
        <qualifiedname>cx::ClipsPlugin::get_plugin_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="72" column="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcx_1_1ClipsPlugin_1a61690874f940acc67d0d7d04e0a4c077" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cx::ClipsPlugin::initialize</definition>
        <argsstring>(const rclcpp_lifecycle::LifecycleNode::WeakPtr parent, const std::string &amp;plugin_name)</argsstring>
        <name>initialize</name>
        <qualifiedname>cx::ClipsPlugin::initialize</qualifiedname>
        <param>
          <type>const rclcpp_lifecycle::LifecycleNode::WeakPtr</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>plugin_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cx_plugin/clips_plugin.hpp" line="83" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Clips Plugin. </para>
    </briefdescription>
    <detaileddescription>
<para>This base class provides the interface for clips plugins that are managed by the <ref refid="classcx_1_1ClipsPluginManager" kindref="compound" external="/home/runner/work/clips-executive/clips-executive/cross_reference/cx_clips_env_manager/cx_clips_env_manager.tag">ClipsPluginManager</ref>.</para>
<para>Inherit from this class and export your class as plugin via pluginlib. </para>
    </detaileddescription>
    <location file="include/cx_plugin/clips_plugin.hpp" line="34" column="1" bodyfile="include/cx_plugin/clips_plugin.hpp" bodystart="34" bodyend="85"/>
    <listofallmembers>
      <member refid="classcx_1_1ClipsPlugin_1a503dc794d932be7047a2d9c3901c61df" prot="public" virt="pure-virtual"><scope>cx::ClipsPlugin</scope><name>clips_env_destroyed</name></member>
      <member refid="classcx_1_1ClipsPlugin_1ae0bf2f3822f20d250a1763bb2f7b1b8c" prot="public" virt="pure-virtual"><scope>cx::ClipsPlugin</scope><name>clips_env_init</name></member>
      <member refid="classcx_1_1ClipsPlugin_1ad659901e789d9344a41a0d64bb7e2c53" prot="public" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>ClipsPlugin</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a68cdb6f3c003491e6b12d502e4aca142" prot="private" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>ClipsPluginManager</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a3aa0e046356cc938b853e414c539cb60" prot="public" virt="virtual"><scope>cx::ClipsPlugin</scope><name>finalize</name></member>
      <member refid="classcx_1_1ClipsPlugin_1acb1a9459c0b47aeac9ed24861732baad" prot="public" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>get_plugin_name</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a6bdb6ad84acf811daf6facf8a5497e2f" prot="public" virt="virtual"><scope>cx::ClipsPlugin</scope><name>initialize</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a61690874f940acc67d0d7d04e0a4c077" prot="private" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>initialize</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a5c9c64f5ab925a688f022554d3985342" prot="protected" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>parent_</name></member>
      <member refid="classcx_1_1ClipsPlugin_1aace7c9a1941b76a19a23e6881ec26906" prot="protected" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>plugin_name_</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a5053a0c74ce074ddc7123554f9e45752" prot="private" virt="non-virtual"><scope>cx::ClipsPlugin</scope><name>Ptr</name></member>
      <member refid="classcx_1_1ClipsPlugin_1a5307ca4a8e112257ee6c1902822d7ce1" prot="public" virt="virtual"><scope>cx::ClipsPlugin</scope><name>~ClipsPlugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
