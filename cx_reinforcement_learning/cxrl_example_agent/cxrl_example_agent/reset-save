(domain-object-type (name object) (super-type object))
(domain-object-type (name block) (super-type object))
(domain-object-type (name robot) (super-type object))
(domain-predicate (name clear) (sensed FALSE) (value-predicate FALSE) (param-names a) (param-types block))
(domain-predicate (name on-table) (sensed FALSE) (value-predicate FALSE) (param-names a) (param-types block))
(domain-predicate (name can-hold) (sensed FALSE) (value-predicate FALSE) (param-names r) (param-types robot))
(domain-predicate (name holding) (sensed FALSE) (value-predicate FALSE) (param-names r a) (param-types robot block))
(domain-predicate (name on) (sensed FALSE) (value-predicate FALSE) (param-names a b) (param-types block block))
(domain-operator-parameter (name r) (operator pickup) (type robot))
(domain-operator-parameter (name b) (operator pickup) (type block))
(domain-operator (name pickup) (param-names r b) (wait-sensed TRUE) (exogenous FALSE))
(pddl-formula (id pickup1) (part-of pickup) (type conjunction))
(pddl-formula (id pickup11-atom) (part-of pickup1) (type atom))
(pddl-predicate (id pickup11) (part-of pickup11-atom) (predicate clear) (param-names b) (param-constants nil))
(pddl-formula (id pickup12-atom) (part-of pickup1) (type atom))
(pddl-predicate (id pickup12) (part-of pickup12-atom) (predicate on-table) (param-names b) (param-constants nil))
(pddl-formula (id pickup13-atom) (part-of pickup1) (type atom))
(pddl-predicate (id pickup13) (part-of pickup13-atom) (predicate can-hold) (param-names r) (param-constants nil))
(domain-effect (name gen1) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen2) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen3) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen4) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-operator-parameter (name r) (operator putdown) (type robot))
(domain-operator-parameter (name b) (operator putdown) (type block))
(domain-operator (name putdown) (param-names r b) (wait-sensed TRUE) (exogenous FALSE))
(pddl-formula (id putdown1) (part-of putdown) (type conjunction))
(pddl-formula (id putdown11-atom) (part-of putdown1) (type atom))
(pddl-predicate (id putdown11) (part-of putdown11-atom) (predicate holding) (param-names r b) (param-constants nil nil))
(domain-effect (name gen5) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen6) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen7) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen8) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-operator-parameter (name r) (operator stack) (type robot))
(domain-operator-parameter (name u) (operator stack) (type block))
(domain-operator-parameter (name l) (operator stack) (type block))
(domain-operator (name stack) (param-names r u l) (wait-sensed TRUE) (exogenous FALSE))
(pddl-formula (id stack1) (part-of stack) (type conjunction))
(pddl-formula (id stack11-atom) (part-of stack1) (type atom))
(pddl-predicate (id stack11) (part-of stack11-atom) (predicate clear) (param-names l) (param-constants nil))
(pddl-formula (id stack12-atom) (part-of stack1) (type atom))
(pddl-predicate (id stack12) (part-of stack12-atom) (predicate holding) (param-names r u) (param-constants nil nil))
(domain-effect (name gen9) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen10) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen11) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen12) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen13) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-operator-parameter (name r) (operator unstack) (type robot))
(domain-operator-parameter (name u) (operator unstack) (type block))
(domain-operator-parameter (name l) (operator unstack) (type block))
(domain-operator (name unstack) (param-names r u l) (wait-sensed TRUE) (exogenous FALSE))
(pddl-formula (id unstack1) (part-of unstack) (type conjunction))
(pddl-formula (id unstack11-atom) (part-of unstack1) (type atom))
(pddl-predicate (id unstack11) (part-of unstack11-atom) (predicate on) (param-names u l) (param-constants nil nil))
(pddl-formula (id unstack12-atom) (part-of unstack1) (type atom))
(pddl-predicate (id unstack12) (part-of unstack12-atom) (predicate clear) (param-names u) (param-constants nil))
(pddl-formula (id unstack13-atom) (part-of unstack1) (type atom))
(pddl-predicate (id unstack13) (part-of unstack13-atom) (predicate can-hold) (param-names r) (param-constants nil))
(domain-effect (name gen14) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen15) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen16) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen17) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen18) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen19) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen20) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen21) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen22) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen23) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen24) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen25) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen26) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen27) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen28) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen29) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen30) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen31) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen32) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen33) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen34) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen35) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen36) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen37) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen38) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen39) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen40) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen41) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen42) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen43) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen44) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen45) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen46) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen47) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen48) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen49) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen50) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen51) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen52) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen53) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen54) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen55) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen56) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen57) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen58) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen59) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen60) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen61) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen62) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen63) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen64) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen65) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen66) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen67) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen68) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen69) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen70) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen71) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen72) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen73) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen74) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen75) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen76) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen77) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen78) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen79) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen80) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen81) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen82) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen83) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen84) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen85) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen86) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen87) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen88) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen89) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen90) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen91) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen92) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen93) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen94) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen95) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen96) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen97) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen98) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen99) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen100) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen101) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen102) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen103) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen104) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen105) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen106) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen107) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen108) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen109) (part-of pickup) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen110) (part-of pickup) (predicate clear) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen111) (part-of pickup) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen112) (part-of pickup) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen113) (part-of putdown) (predicate clear) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen114) (part-of putdown) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen115) (part-of putdown) (predicate on-table) (param-names b) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen116) (part-of putdown) (predicate holding) (param-names r b) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen117) (part-of stack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen118) (part-of stack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen119) (part-of stack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen120) (part-of stack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen121) (part-of stack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen122) (part-of unstack) (predicate holding) (param-names r u) (param-values) (param-constants nil nil) (type POSITIVE))
(domain-effect (name gen123) (part-of unstack) (predicate clear) (param-names l) (param-values) (param-constants nil) (type POSITIVE))
(domain-effect (name gen124) (part-of unstack) (predicate on) (param-names u l) (param-values) (param-constants nil nil) (type NEGATIVE))
(domain-effect (name gen125) (part-of unstack) (predicate clear) (param-names u) (param-values) (param-constants nil) (type NEGATIVE))
(domain-effect (name gen126) (part-of unstack) (predicate can-hold) (param-names r) (param-values) (param-constants nil) (type NEGATIVE))
(domain-loaded)
(domain-fact (name clear) (param-values block1))
(domain-fact (name clear) (param-values block2))
(domain-fact (name clear) (param-values block3))
(domain-fact (name on-table) (param-values block1))
(domain-fact (name on-table) (param-values block2))
(domain-fact (name on-table) (param-values block3))
(domain-fact (name can-hold) (param-values robot1))
(domain-object (name block1) (type block))
(domain-object (name block2) (type block))
(domain-object (name block3) (type block))
(domain-object (name robot1) (type robot))
(domain-facts-loaded)
(goal (id STACK-gen127) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block3 lower block2) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(goal (id STACK-gen128) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block3 lower block1) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(goal (id STACK-gen129) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block1 lower block3) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(goal (id STACK-gen130) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block2 lower block3) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(goal (id STACK-gen131) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block2 lower block1) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(goal (id STACK-gen132) (class STACK) (type ACHIEVE) (sub-type SIMPLE) (parent nil) (mode FORMULATED) (outcome UNKNOWN) (warning) (error) (message "") (priority 0.0) (params upper block1 lower block2) (meta) (required-resources) (acquired-resources) (committed-to nil) (verbosity DEFAULT))
(rl-action (id STACK-gen132) (name STACK#upper#block1#lower#block2) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(rl-action (id STACK-gen131) (name STACK#upper#block2#lower#block1) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(rl-action (id STACK-gen130) (name STACK#upper#block2#lower#block3) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(rl-action (id STACK-gen129) (name STACK#upper#block1#lower#block3) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(rl-action (id STACK-gen128) (name STACK#upper#block3#lower#block1) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(rl-action (id STACK-gen127) (name STACK#upper#block3#lower#block2) (is-selected FALSE) (is-finished FALSE) (assigned-to robot1) (points 0))
(robot-waiting (robot robot1))
(cx-rl-interfaces-create-rl-env-state-service (name "create_rl_env_state"))
(cx-rl-interfaces-exec-action-selection-client (service "exec_action_selection"))
(cx-rl-interfaces-get-domain-objects-service (name "get_domain_objects"))
(cx-rl-interfaces-get-domain-predicates-service (name "get_domain_predicates"))
(cx-rl-interfaces-get-action-list-service (name "get_action_list_executable"))
(cx-rl-interfaces-get-action-list-robot-service (name "get_action_list_executable_for_robot"))
(cx-rl-interfaces-set-rl-mode-service (name "set_rl_mode"))
(cx-rl-interfaces-get-free-robot-server (name "get_free_robot"))
(cx-rl-interfaces-action-selection-server (name "action_selection"))
(cx-rl-interfaces-reset-cx-server (name "reset_cx"))
(saved-facts)
